
&НаКлиенте
Процедура МесяцДокументовПриИзменении(Элемент)
	МесяцДокументов = НачалоМесяца(МесяцДокументов);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПерерасчет(Команда)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	СоздатьПерерасчетНаСервере();
	Сообщить("Создание перерасчетов завершено");
КонецПроцедуры

&НаСервере
Процедура СоздатьПерерасчетНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(рцПоказанияСчетчиков.Период) КАК Период,
		|	рцПоказанияСчетчиков.Автор,
		|	рцПоказанияСчетчиков.Счетчик,
		|	рцПоказанияСчетчиков.ДатаДокумента КАК ДатаДокумента
		|ПОМЕСТИТЬ вт1
		|ИЗ
		|	РегистрСведений.рцПоказанияСчетчиков КАК рцПоказанияСчетчиков
		|ГДЕ
		|	рцПоказанияСчетчиков.Период < НАЧАЛОПЕРИОДА(рцПоказанияСчетчиков.ДатаДокумента, МЕСЯЦ)
		|	И рцПоказанияСчетчиков.Автор ССЫЛКА Документ.ркПоказанияСчетчиков
		|	И рцПоказанияСчетчиков.ДатаДокумента МЕЖДУ &ДатаНачала И &ДатаКонца
		|
		|СГРУППИРОВАТЬ ПО
		|	рцПоказанияСчетчиков.Автор,
		|	рцПоказанияСчетчиков.Счетчик,
		|	рцПоказанияСчетчиков.ДатаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	вт1.Период,
		|	вт1.Автор,
		|	вт1.Счетчик,
		|	вт1.ДатаДокумента,
		|	ркЛицевыеСчета.Ссылка КАК ЛС
		|ПОМЕСТИТЬ вт2
		|ИЗ
		|	вт1 КАК вт1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
		|		ПО вт1.Счетчик.Владелец = ркЛицевыеСчета.Помещение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт2.Период,
		|	вт2.Автор,
		|	вт2.Счетчик,
		|	вт2.ДатаДокумента,
		|	вт2.ЛС,
		|	ркСоставНачисленийСрезПоследних.ВидРасчета
		|ИЗ
		|	вт2 КАК вт2
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ркСоставНачислений.СрезПоследних КАК ркСоставНачисленийСрезПоследних
		|		ПО вт2.ЛС = ркСоставНачисленийСрезПоследних.ЛицевойСчет";
	
	Запрос.УстановитьПараметр("ДатаКонца", КонецМесяца(МесяцДокументов));
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(МесяцДокументов));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	

	тДатаОкончания = НачалоМесяца(МесяцДокументов) - 1;
	тЕдиницаРасчета = Справочники.ркЕдиницыРасчета.НайтиПоНаименованию("Счетчик",Истина);
	
	
	ТранзакцияАктивна = Ложь;
	Счетчик = 0;
	Док = Неопределено;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если Счетчик = 0 И НЕ ТранзакцияАктивна Тогда
			НачатьТранзакцию();
			ТранзакцияАктивна = Истина;
			
			Док = Документы.ркПерерасчет.СоздатьДокумент();
			Док.Дата = КонецМесяца(МесяцДокументов);
			Док.Организация = Организация;
			Док.Комментарий = "По показаниям "+ТекущаяДата();
			Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			Док.ТипОперацииНачисления = Перечисления.ркТипыОперацийНачисления.ПерерасчетыПрошлыхПериодов;
			Док.ВидПерерасчета = ВидПерерасчета;
			
		КонецЕсли;
		
		НоваяСтрокаТЧ = Док.Состав.Добавить();
		НоваяСтрокаТЧ.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
		НоваяСтрокаТЧ.ДатаНачала = ВыборкаДетальныеЗаписи.Период;
		НоваяСтрокаТЧ.ДатаОкончания = тДатаОкончания;
		НоваяСтрокаТЧ.ЕдиницаПерерасчета = тЕдиницаРасчета;
		НоваяСтрокаТЧ.ЛицевойСчет = ВыборкаДетальныеЗаписи.ЛС;
		
		Счетчик = Счетчик + 1;
		
		Если Счетчик >= 500 И ТранзакцияАктивна Тогда 
			Если Док.Состав.Количество() > 0 Тогда				
				ТаблицаСПерерасчетами=ркПерерасчетыСервер.ПолучитьТаблицыПерерасчета(Док.Состав,,Док.УК, Док.Дата);
				Док.Начисления.Загрузить(ТаблицаСПерерасчетами.Начисления);
				Док.ДополнительныеСвойства.Вставить("ПроверкаПериодаПриЗаписи",Ложь);
				Док.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			ТранзакцияАктивна = Ложь;
			Счетчик = 0;
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	КонецЦикла;
	Если ТранзакцияАктивна Тогда
		Если Док.Состав.Количество() > 0 Тогда				
			ТаблицаСПерерасчетами=ркПерерасчетыСервер.ПолучитьТаблицыПерерасчета(Док.Состав,,Док.УК, Док.Дата);
			Док.Начисления.Загрузить(ТаблицаСПерерасчетами.Начисления);
			Док.ДополнительныеСвойства.Вставить("ПроверкаПериодаПриЗаписи",Ложь);
			Док.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
		ТранзакцияАктивна = Ложь;
		Счетчик = 0;
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры
