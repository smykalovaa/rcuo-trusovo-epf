&НаСервере
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.1.4.32");
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Назначение.Добавить("Справочник.ркЛицевыеСчета");
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "Карточка лицевого счета";
	НоваяКоманда.Идентификатор = "КарточкаЛицевогоСчета";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";

	Возврат ПараметрыРегистрации;
	
КонецФункции

// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
&НаСервере
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, ПараметрыВыполненияКоманды) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Ложь;
	
	// Данная обработка может использоваться как встроенная печатная форма и как дополнительная печатная форма.
	// По-умолчанию, идентификатор встроенной печатной формы будет "КопияФинансовоЛицевогоСчета",
	// а дополнительной "КопияФинансовоЛицевогоСчета_Дополнительная".
	// Это необходимо для того что бы дополнительная печатная форма не перекрывала встроенную.
	ИмяМакетаУсловное = "КарточкаЛицевогоСчета";
	ЭтоВнешняяПечатнаяФорма = Истина;
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ИмяМакетаУсловное) Тогда
		ПечатьУсловногоМакета(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, ПараметрыВыполненияКоманды, ИмяМакетаУсловное, ЭтоВнешняяПечатнаяФорма);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПечатьУсловногоМакета(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, ПараметрыВыполненияКоманды, ИмяМакетаУсловное, ЭтоВнешняяПечатнаяФорма) Экспорт
	
	// Вставляем структуру с настройками (в возращаемый параметр)
	ПараметрыПечати = Новый Структура;
	Для Каждого КлючЗначение Из ПараметрыВыполненияКоманды Цикл
		ПараметрыПечати.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	// Хранилище
	//Хранилище = Новый Структура();
	//ркРасчетНачисленийСервер.ИнициализироватьСессии(Хранилище);
	
	// Настройки из параметров печатных форм
	//Настройки = ПолучитьНастройки();
	
	// Вставляем структуру с настройками квитанции (в возращаемый параметр)
	//ПараметрыПечати.Вставить("Настройки", Настройки);
	
	//Если НЕ ПараметрыПечати.Свойство("НачалоПериода") 
	//	ИЛИ НЕ ПараметрыПечати.Свойство("КонецПериода") Тогда
		
		КонецПериода = КонецМесяца(ркОбщегоНазначенияСервер.ПолучитьДатуНачалаТекущегоРасчетногоПериода());
		НачалоПериода  = МассивОбъектов[0].ДатаОткрытия;

		ПараметрыПечати.Вставить("НачалоПериода", НачалоПериода);
		ПараметрыПечати.Вставить("КонецПериода", КонецПериода);

	//КонецЕсли;
	
	ИмяМакета = "КарточкаЛицевогоСчета";
	
	Если ЭтоВнешняяПечатнаяФорма Тогда
		Макет = ПолучитьМакет(ИмяМакета);
		ПолноеИмяМакетаДляРедактирования = Неопределено;
	Иначе
		ПолноеИмяМакета = "Обработка.КарточкаЛицевогоСчета." + ИмяМакета;
		Макет = УправлениеПечатью.ПолучитьМакет(ПолноеИмяМакета);
		ПолноеИмяМакетаДляРедактирования = ПолноеИмяМакета;
	КонецЕсли;
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ИмяМакетаУсловное,
		"Справка об отстутствии задолженности",
		ПолучитьТабличныйДокумент(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, Макет),
		,
		ПолноеИмяМакетаДляРедактирования
	);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныйДокумент(ЛицевыеСчета, ОбъектыПечати, ПараметрыПечати, Макет) экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	//ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ркПФКопияФинансовоЛицевогоСчета";
	

	ОбластиМакета = Новый Структура;
	ОбластиМакета.Вставить("Шапка");
	ОбластиМакета.Вставить("НаНачало");
	ОбластиМакета.Вставить("СправочныеПараметры");
	ОбластиМакета.Вставить("ПодключенныеУслуги");
	ОбластиМакета.Вставить("ПодключенныеСчетчики");
	ОбластиМакета.Вставить("ВходящееСальдо");
	ОбластиМакета.Вставить("МесяцШапка");
	ОбластиМакета.Вставить("ДвиженияРегистратор");
	ОбластиМакета.Вставить("Движения");
	ОбластиМакета.Вставить("МесяцПодвал");
		
	Для Каждого КлючИЗначение Из ОбластиМакета Цикл
		ИмяОбласти = КлючИЗначение.Ключ;
		ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
		ОбластиМакета.Вставить(ИмяОбласти, ОбластьМакета);
	КонецЦикла;
    ОбластьШапка = ОбластиМакета.Шапка;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период", Формат(ПараметрыПечати.НачалоПериода, "ДФ=dd.MM.yyyy") + " - " + Формат(ПараметрыПечати.КонецПериода, "ДФ=dd.MM.yyyy"));
	СтруктураПараметров.Вставить("НомерЛС", ЛицевыеСчета[0].Код);
	СтруктураПараметров.Вставить("ФИО", ЛицевыеСчета[0].Наименование);
	СтруктураПараметров.Вставить("Адрес", ЛицевыеСчета[0].Дом.Наименование + ", " + ЛицевыеСчета[0].Помещение.Наименование );
	ЗапросПлита = Новый Запрос;
	ЗапросПлита.Текст = "ВЫБРАТЬ
	                    |	ркЗначенияПериодическихСвойствОбъектовСрезПоследних.Значение
	                    |ИЗ
	                    |	РегистрСведений.ркЗначенияПериодическихСвойствОбъектов.СрезПоследних(
	                    |			,
	                    |			Свойство = &Свойство
	                    |				И Объект = &Объект) КАК ркЗначенияПериодическихСвойствОбъектовСрезПоследних";
	ЗапросПлита.УстановитьПараметр("Объект", ЛицевыеСчета[0].Ссылка);
	ЗапросПлита.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Тип плиты"));
	ВыборкаПлита = ЗапросПлита.Выполнить().Выбрать();
	Если ВыборкаПлита.Следующий() Тогда
		СтруктураПараметров.Вставить("ТипПлиты", ВыборкаПлита.Значение);
	КонецЕсли;
	ОбластьШапка.Параметры.Заполнить(СтруктураПараметров);
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьНаНачало = ОбластиМакета.НаНачало;
	ОбластьНаНачало.Параметры.НачалоПериода = Формат(ПараметрыПечати.НачалоПериода - 24 * 3600, "ДФ = dd.MM.yyyy");
	ТабличныйДокумент.Вывести(ОбластьНаНачало);
	
	ОбластьСправочныеПараметры = ОбластиМакета.СправочныеПараметры;
	ТабличныйДокумент.Вывести(ОбластьСправочныеПараметры);
	
	ОбластьПодключенныеУслуги = ОбластиМакета.ПодключенныеУслуги;
	ТабличныйДокумент.Вывести(ОбластьПодключенныеУслуги);
	
	ЗапросСчетчики = Новый Запрос;
	ЗапросСчетчики.Текст = "ВЫБРАТЬ
	                       |	ркСостояниеСчетчиковСрезПоследних.Счетчик.Номер как Счетчик
	                       |ИЗ
	                       |	РегистрСведений.ркСостояниеСчетчиков.СрезПоследних(&ДатаСреза, ) КАК ркСостояниеСчетчиковСрезПоследних
	                       |ГДЕ
	                       |	ркСостояниеСчетчиковСрезПоследних.Включен
	                       |	И ркСостояниеСчетчиковСрезПоследних.Счетчик.Владелец.Ссылка = &Помещение";
	ЗапросСчетчики.УстановитьПараметр("Помещение", ЛицевыеСчета[0].Помещение);
	ЗапросСчетчики.УстановитьПараметр("ДатаСреза", ПараметрыПечати.НачалоПериода - 24 * 3600);
	ВыборкаСчетчики = ЗапросСчетчики.Выполнить().Выбрать();
	Пока ВыборкаСчетчики.Следующий() Цикл
		ОбластьСчетчики = ОбластиМакета.ПодключенныеСчетчики;
		ОбластьСчетчики.Параметры.Счетчик = ВыборкаСчетчики.Счетчик;
		ТабличныйДокумент.Вывести(ОбластьСчетчики);
	КонецЦикла;
	
	ОбластьВходящееСальдо = ОбластиМакета.ВходящееСальдо;
	ЗапросСальдо = Новый Запрос;
	ЗапросСальдо.Текст = "ВЫБРАТЬ
	                     |	ркЗадолженностьЛицевыхСчетовОстатки.СуммаОстаток
	                     |ИЗ
	                     |	РегистрНакопления.ркЗадолженностьЛицевыхСчетов.Остатки(&ДатаСреза, ЛицевойСчет = &ЛицевойСчет) КАК ркЗадолженностьЛицевыхСчетовОстатки";
	ЗапросСальдо.УстановитьПараметр("ЛицевойСчет", ЛицевыеСчета[0].Ссылка);
	ЗапросСальдо.УстановитьПараметр("ДатаСреза", ПараметрыПечати.НачалоПериода);
	ВыборкаСальдо = ЗапросСальдо.Выполнить().Выбрать();
	Если ВыборкаСальдо.Следующий() Тогда ОбластьВходящееСальдо.Параметры.ВходящееСальдо = ВыборкаСальдо.СуммаОстаток КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьВходящееСальдо);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркПоказанияСчетчиков.Период, МЕСЯЦ) КАК Месяц,
	               |	ркПоказанияСчетчиков.Период КАК Дата,
	               |	""Показания счетчиков"" КАК События,
	               |	ркПоказанияСчетчиков.Счетчик.Номер КАК Значение,
	               |	ркПоказанияСчетчиков.НачальноеКоличество КАК НачальныеПоказания,
	               |	ркПоказанияСчетчиков.НачальноеКоличество + ркПоказанияСчетчиков.Количество КАК КонечныеПоказания,
	               |	0 КАК Расход,
	               |	NULL КАК Оплачено,
	               |	0 КАК Начислено,
	               |	NULL КАК Тариф,
	               |	ркПоказанияСчетчиков.Количество КАК КоличествоПоказаний,
	               |	ркПоказанияСчетчиков.Регистратор КАК Регистратор
	               |ИЗ
	               |	Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ркПоказанияСчетчиков КАК ркПоказанияСчетчиков
	               |		ПО (ркПоказанияСчетчиков.ЛицевойСчет = ркЛицевыеСчета.Ссылка)
	               |ГДЕ
	               |	ркЛицевыеСчета.Ссылка = &ЛицевойСчет
	               |	И ркПоказанияСчетчиков.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркОплата.Период, МЕСЯЦ),
	               |	ркОплата.ДатаОплаты,
	               |	""Оплата"",
	               |	ркОплата.ВидРасчета,
	               |	0,
	               |	0,
	               |	0,
	               |	ЕСТЬNULL(ркОплата.Сумма, 0),
	               |	0,
	               |	NULL,
	               |	0,
	               |	ркОплата.Регистратор
	               |ИЗ
	               |	Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ркОплата КАК ркОплата
	               |		ПО (ркОплата.ЛицевойСчет = ркЛицевыеСчета.Ссылка)
	               |ГДЕ
	               |	ркЛицевыеСчета.Ссылка = &ЛицевойСчет
	               |	И ркОплата.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ),
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ),
	               |	ВЫБОР
	               |		КОГДА ркНачисления.Регистратор ССЫЛКА Документ.ркПерерасчет
	               |			ТОГДА ""Перерасчет""
	               |		ИНАЧЕ ""Начисления""
	               |	КОНЕЦ,
	               |	0,
	               |	0,
	               |	0,
	               |	СУММА(ркНачисления.КоличествоВПределахНормы + ркНачисления.КоличествоСверхНормы),
	               |	0,
	               |	СУММА(ркНачисления.СуммаНачислений),
	               |	ркНачисления.Тариф,
	               |	0,
	               |	ркНачисления.Регистратор
	               |ИЗ
	               |	РегистрНакопления.ркНачисления КАК ркНачисления
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	               |		ПО ркНачисления.ЛицевойСчет = ркЛицевыеСчета.Ссылка
	               |ГДЕ
	               |	ркЛицевыеСчета.Ссылка = &ЛицевойСчет
	               |	И НЕ ркНачисления.НаОбщедомовыеНужды
	               |	И ркНачисления.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ),
	               |	ВЫБОР
	               |		КОГДА ркНачисления.Регистратор ССЫЛКА Документ.ркПерерасчет
	               |			ТОГДА ""Перерасчет""
	               |		ИНАЧЕ ""Начисления""
	               |	КОНЕЦ,
	               |	ркНачисления.Тариф,
	               |	ркНачисления.Регистратор,
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркЗначенияПериодическихСвойствОбъектов.Период, МЕСЯЦ),
	               |	ркЗначенияПериодическихСвойствОбъектов.Период,
	               |	""Изменение свойства "" + ркЗначенияПериодическихСвойствОбъектов.Свойство.Наименование,
	               |	ркЗначенияПериодическихСвойствОбъектов.Значение,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	NULL,
	               |	0,
	               |	ркЗначенияПериодическихСвойствОбъектов.Регистратор
	               |ИЗ
	               |	Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ркЗначенияПериодическихСвойствОбъектов КАК ркЗначенияПериодическихСвойствОбъектов
	               |		ПО (ркЗначенияПериодическихСвойствОбъектов.Объект = ркЛицевыеСчета.Ссылка)
	               |ГДЕ
	               |	ркЛицевыеСчета.Ссылка = &ЛицевойСчет
	               |	И ркЗначенияПериодическихСвойствОбъектов.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ),
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ),
	               |	ВЫБОР
	               |		КОГДА ркНачисления.Регистратор ССЫЛКА Документ.ркПерерасчет
	               |			ТОГДА ""Перерасчет""
	               |		ИНАЧЕ ""Начисления ОДН""
	               |	КОНЕЦ,
	               |	0,
	               |	0,
	               |	0,
	               |	СУММА(ркНачисления.КоличествоВПределахНормы + ркНачисления.КоличествоСверхНормы),
	               |	0,
	               |	СУММА(ркНачисления.СуммаНачислений),
	               |	ркНачисления.Тариф,
	               |	0,
	               |	ркНачисления.Регистратор
	               |ИЗ
	               |	РегистрНакопления.ркНачисления КАК ркНачисления
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	               |		ПО ркНачисления.ЛицевойСчет = ркЛицевыеСчета.Ссылка
	               |ГДЕ
	               |	ркЛицевыеСчета.Ссылка = &ЛицевойСчет
	               |	И ркНачисления.НаОбщедомовыеНужды
	               |	И ркНачисления.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ),
	               |	ВЫБОР
	               |		КОГДА ркНачисления.Регистратор ССЫЛКА Документ.ркПерерасчет
	               |			ТОГДА ""Перерасчет""
	               |		ИНАЧЕ ""Начисления ОДН""
	               |	КОНЕЦ,
	               |	ркНачисления.Тариф,
	               |	ркНачисления.Регистратор,
	               |	НАЧАЛОПЕРИОДА(ркНачисления.Период, МЕСЯЦ)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркСоставНачислений.Период, МЕСЯЦ),
	               |	ркСоставНачислений.Период,
	               |	ВЫБОР
	               |		КОГДА ркСоставНачислений.СтатусУчастияВРасчетах.РассчитыватьНачисления
	               |			ТОГДА ""Подключение услуги""
	               |		ИНАЧЕ ""Отключение услуги""
	               |	КОНЕЦ,
	               |	ркСоставНачислений.ВидТарифа,
	               |	NULL,
	               |	NULL,
	               |	0,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	0,
	               |	ркСоставНачислений.Регистратор
	               |ИЗ
	               |	РегистрСведений.ркСоставНачислений КАК ркСоставНачислений
	               |ГДЕ
	               |	ркСоставНачислений.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ркСоставНачислений.ЛицевойСчет = &ЛицевойСчет
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ркОплата.Период, МЕСЯЦ),
	               |	ркОплата.ДатаОплаты,
	               |	""Корректировка"",
	               |	ркОплата.ВидРасчета,
	               |	0,
	               |	0,
	               |	0,
	               |	ЕСТЬNULL(ркОплата.Сумма, 0),
	               |	0,
	               |	NULL,
	               |	0,
	               |	ркОплата.Регистратор
	               |ИЗ
	               |	Справочник.ркЛицевыеСчета КАК ркЛицевыеСчета
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ркЗадолженностьЛицевыхСчетов КАК ркОплата
	               |		ПО (ркОплата.ЛицевойСчет = ркЛицевыеСчета.Ссылка)
	               |ГДЕ
	               |	ркЛицевыеСчета.Ссылка = &ЛицевойСчет
	               |	И ркОплата.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ркОплата.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Месяц,
	               |	Дата
	               |ИТОГИ
	               |	СУММА(Расход),
	               |	СУММА(Оплачено),
	               |	СУММА(Начислено)
	               |ПО
	               |	Месяц,
	               |	Регистратор";
	Запрос.УстановитьПараметр("ЛицевойСчет", ЛицевыеСчета[0].Ссылка);
	Запрос.УстановитьПараметр("ДатаНач", ПараметрыПечати.НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон", ПараметрыПечати.КонецПериода);
	ВыборкаМесяц = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМесяц.Следующий() Цикл
		ЗапросСальдо = Новый Запрос;
		ЗапросСальдо.Текст = "ВЫБРАТЬ
		                     |	СУММА(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
		                     |	СУММА(ркЗадолженностьЛицевыхСчетовОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
		                     |ИЗ
		                     |	РегистрНакопления.ркЗадолженностьЛицевыхСчетов.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&Месяц, МЕСЯЦ), КонецПериода(&Месяц, МЕСЯЦ), Месяц, , ЛицевойСчет = &ЛицевойСчет) КАК ркЗадолженностьЛицевыхСчетовОстаткиИОбороты";
	    ЗапросСальдо.УстановитьПараметр("Месяц", ВыборкаМесяц.Месяц);
		ЗапросСальдо.УстановитьПараметр("ЛицевойСчет", ЛицевыеСчета[0].Ссылка);
		ВыборкаСальдо = ЗапросСальдо.Выполнить().Выбрать();
		ВыборкаСальдо.Следующий();
							 
		ОбластьМесяцШапка = ОбластиМакета.МесяцШапка;
		ОбластьМесяцШапка.Параметры.Месяц = Формат(ВыборкаМесяц.Месяц, "ДФ='MMMM yyyy'");
		ОбластьМесяцШапка.Параметры.СальдоНач = ВыборкаСальдо.СуммаНачальныйОстаток;
		ТабличныйДокумент.Вывести(ОбластьМесяцШапка);
		
		ВыборкаРегистратор = ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаРегистратор.Следующий() Цикл
			ОбластьДвижения = ОбластиМакета.ДвиженияРегистратор;
			ОбластьДвижения.Параметры.Заполнить(ВыборкаРегистратор);
			ОбластьДвижения.Параметры.События = ВыборкаРегистратор.Регистратор;
			ОбластьДвижения.Параметры.СобытиеРегистратор = ВыборкаРегистратор.Регистратор;
			//ОбластьДвижения.Параметры.Расход = ВыборкаРегистратор.Расход + ВыборкаДвижения.КоличествоПоказаний;
			ТабличныйДокумент.Вывести(ОбластьДвижения);
			ВыборкаДвижения = ВыборкаРегистратор.Выбрать();
			Пока ВыборкаДвижения.Следующий() Цикл
				ОбластьДвижения = ОбластиМакета.Движения;
				ОбластьДвижения.Параметры.Заполнить(ВыборкаДвижения);
				ОбластьДвижения.Параметры.События = "   " + ВыборкаДвижения.События;
				//ОбластьДвижения.Параметры.СобытиеРегистратор = ВыборкаРегистратор.Регистратор;
				ОбластьДвижения.Параметры.Расход = ВыборкаДвижения.Расход + ВыборкаДвижения.КоличествоПоказаний;
				ТабличныйДокумент.Вывести(ОбластьДвижения);
			КонецЦикла;
		КонецЦикла;
		ОбластьМесяцПодвал = ОбластиМакета.МесяцПодвал;
		ОбластьМесяцПодвал.Параметры.Заполнить(ВыборкаМесяц);
		ОбластьМесяцПодвал.Параметры.Месяц = Формат(ВыборкаМесяц.Месяц, "ДФ='MMMM yyyy'");
		ОбластьМесяцПодвал.Параметры.СальдоКон = ВыборкаСальдо.СуммаКонечныйОстаток;
		ТабличныйДокумент.Вывести(ОбластьМесяцПодвал);
	
	КонецЦикла;
	
	//
	////Вывод извещений счет-квитанций лицевых счетов
	//ПервыйДокумент = Истина;
	//Для Каждого ЛицевойСчет Из ЛицевыеСчета Цикл
	//	Если Не ПервыйДокумент Тогда
	//		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
	//	КонецЕсли;
	//	ПервыйДокумент = Ложь;
	//	ТабличныйДокумент.Вывести(ПечатьКопииЛицевогоСчета(Хранилище, ЛицевойСчет, ОбластиМакета, ПараметрыПечати));
	//КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

